openapi: 3.0.0
info:
  title: Retro App API
  description: API documentation for the Retrospective Application
  version: 1.0.0

servers:
  - url: /api
    description: Next.js API routes

components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: next-auth.session-token
  
  schemas:
    Team:
      type: object
      properties:
        PK:
          type: string
          example: "TEAM#123"
        SK:
          type: string
          example: "METADATA#1"
        type:
          type: string
          example: "TEAM"
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string

    Sprint:
      type: object
      properties:
        PK:
          type: string
          example: "TEAM#123"
        SK:
          type: string
          example: "SPRINT#456"
        type:
          type: string
          example: "SPRINT"
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [active, completed]
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string

    Card:
      type: object
      properties:
        PK:
          type: string
          example: "SPRINT#456"
        SK:
          type: string
          example: "CARD#789"
        type:
          type: string
          example: "CARD"
        content:
          type: string
        category:
          type: string
        votes:
          type: integer
        comments:
          type: integer
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string

paths:
  /teams:
    get:
      summary: Get all teams for the authenticated user
      security:
        - sessionAuth: []
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    
    post:
      summary: Create a new team
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Team created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  teamId:
                    type: string
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /teams/{teamId}/sprints:
    parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
    
    get:
      summary: Get all sprints for a team
      security:
        - sessionAuth: []
      responses:
        '200':
          description: List of sprints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sprint'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    
    post:
      summary: Create a new sprint
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - startDate
                - endDate
              properties:
                name:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Sprint created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sprintId:
                    type: string
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /teams/{teamId}/sprints/{sprintId}/cards:
    parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
      - name: sprintId
        in: path
        required: true
        schema:
          type: string
    
    get:
      summary: Get all cards for a sprint
      security:
        - sessionAuth: []
      responses:
        '200':
          description: List of cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    
    post:
      summary: Create a new card
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
                - category
              properties:
                content:
                  type: string
                category:
                  type: string
      responses:
        '200':
          description: Card created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardId:
                    type: string
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    
    patch:
      summary: Update a card
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cardId
                - content
                - category
              properties:
                cardId:
                  type: string
                content:
                  type: string
                category:
                  type: string
      responses:
        '200':
          description: Card updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error 